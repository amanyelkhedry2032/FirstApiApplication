//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FirstApiApplication
{
    using System;
    using System.Collections.Generic;
    
    public partial class Employee
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Employee()
        {
            this.Attendences = new HashSet<Attendence>();
            this.AttendenceupdateHistories = new HashSet<AttendenceupdateHistory>();
            this.BalanceDayOffs = new HashSet<BalanceDayOff>();
            this.Disabilities = new HashSet<Disability>();
            this.DisciplinaryActions = new HashSet<DisciplinaryAction>();
            this.DisciplinaryActions1 = new HashSet<DisciplinaryAction>();
            this.DownLoadLogs = new HashSet<DownLoadLog>();
            this.DownLoadTransactions = new HashSet<DownLoadTransaction>();
            this.Drivers = new HashSet<Driver>();
            this.EmpCards = new HashSet<EmpCard>();
            this.EmpFaces = new HashSet<EmpFace>();
            this.EmpFingerPrints = new HashSet<EmpFingerPrint>();
            this.EmployeeCertifications = new HashSet<EmployeeCertification>();
            this.EmployeeDayOffs = new HashSet<EmployeeDayOff>();
            this.EmployeeInsurances = new HashSet<EmployeeInsurance>();
            this.EmployeeMilitaryStatus = new HashSet<EmployeeMilitaryStatu>();
            this.EmployeeVacationRequests = new HashSet<EmployeeVacationRequest>();
            this.GeneralServices = new HashSet<GeneralService>();
            this.LateEarlies = new HashSet<LateEarly>();
            this.NutritionWorkers = new HashSet<NutritionWorker>();
            this.OfficialVacationExpections = new HashSet<OfficialVacationExpection>();
            this.OperationEmployees = new HashSet<OperationEmployee>();
            this.OverTimes = new HashSet<OverTime>();
            this.PermissionRequestToes = new HashSet<PermissionRequestTo>();
            this.Retirements = new HashSet<Retirement>();
            this.SkillLevels = new HashSet<SkillLevel>();
            this.TakeOffs = new HashSet<TakeOff>();
            this.TaskRequests = new HashSet<TaskRequest>();
            this.TaskRequests1 = new HashSet<TaskRequest>();
            this.TempDayOffs = new HashSet<TempDayOff>();
            this.VacationBalances = new HashSet<VacationBalance>();
            this.WorkLicences = new HashSet<WorkLicence>();
            this.Devices = new HashSet<Device>();
        }
    
        public int EmployeeId { get; set; }
        public Nullable<int> CertificateId { get; set; }
        public Nullable<int> ReligionId { get; set; }
        public Nullable<int> NationalityId { get; set; }
        public Nullable<int> JobId { get; set; }
        public Nullable<int> BankId { get; set; }
        public Nullable<int> GroupId { get; set; }
        public int Code { get; set; }
        public string Name { get; set; }
        public bool Gender { get; set; }
        public System.DateTime BirthDate { get; set; }
        public long NationalNumber { get; set; }
        public Nullable<int> StatusId { get; set; }
        public string partner { get; set; }
        public int KidsNumber { get; set; }
        public long Mobile1 { get; set; }
        public long Mobile2 { get; set; }
        public int Phone { get; set; }
        public string Email { get; set; }
        public int GraduationYear { get; set; }
        public bool GeneralServiceStatus { get; set; }
        public System.DateTime HireDate { get; set; }
        public bool InsuranceStatus { get; set; }
        public long WorkOfficeCertificateNumber { get; set; }
        public System.DateTime WorkOfficeCertificateDate { get; set; }
        public string WorkOfficeCertificatePlace { get; set; }
        public System.DateTime WorkOfficeCertificateSendDate { get; set; }
        public long AccountNumber { get; set; }
        public bool Active_Inactive { get; set; }
        public Nullable<int> EmployeeBirthCityId { get; set; }
        public Nullable<int> EmployeeAddressCityId { get; set; }
        public Nullable<int> EmployeeBirthGoverneratesId { get; set; }
        public Nullable<int> EmployeeAddressGoverneratesId { get; set; }
        public Nullable<int> EmployeeBirthCountriesId { get; set; }
        public Nullable<int> EmployeeAddressCountriesId { get; set; }
        public string Note { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Attendence> Attendences { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AttendenceupdateHistory> AttendenceupdateHistories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BalanceDayOff> BalanceDayOffs { get; set; }
        public virtual Bank Bank { get; set; }
        public virtual Certification Certification { get; set; }
        public virtual City City { get; set; }
        public virtual City City1 { get; set; }
        public virtual Country Country { get; set; }
        public virtual Country Country1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Disability> Disabilities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DisciplinaryAction> DisciplinaryActions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DisciplinaryAction> DisciplinaryActions1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DownLoadLog> DownLoadLogs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DownLoadTransaction> DownLoadTransactions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Driver> Drivers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpCard> EmpCards { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpFace> EmpFaces { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpFingerPrint> EmpFingerPrints { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeCertification> EmployeeCertifications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeDayOff> EmployeeDayOffs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeInsurance> EmployeeInsurances { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeMilitaryStatu> EmployeeMilitaryStatus { get; set; }
        public virtual Governerate Governerate { get; set; }
        public virtual Governerate Governerate1 { get; set; }
        public virtual Grouping Grouping { get; set; }
        public virtual Job Job { get; set; }
        public virtual MaritalStatu MaritalStatu { get; set; }
        public virtual Nationality Nationality { get; set; }
        public virtual Religion Religion { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeVacationRequest> EmployeeVacationRequests { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GeneralService> GeneralServices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LateEarly> LateEarlies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NutritionWorker> NutritionWorkers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OfficialVacationExpection> OfficialVacationExpections { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OperationEmployee> OperationEmployees { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OverTime> OverTimes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PermissionRequestTo> PermissionRequestToes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Retirement> Retirements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SkillLevel> SkillLevels { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TakeOff> TakeOffs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TaskRequest> TaskRequests { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TaskRequest> TaskRequests1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TempDayOff> TempDayOffs { get; set; }
        public virtual User User { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VacationBalance> VacationBalances { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WorkLicence> WorkLicences { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Device> Devices { get; set; }
    }
}
